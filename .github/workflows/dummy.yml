# yamllint disable rule:line-length
---
  name: Dummy Workflow
  permissions:
    contents: read
  on:
    workflow_dispatch:
  
  jobs:
    prepare:
      runs-on: ubuntu-20.04
      name: Generate data for jobs
      outputs:
        linux: ${{steps.data.outputs.linux}}
        mac: ${{steps.data.outputs.mac}}
      steps:
        - name: Generate data
          id: data
          shell: bash
          run: |
            for os in "linux" "mac";
            do
              stats="{"
              for type in "client" "desktop" "plugins";
              do
                stats+="\"${type}_coverage\":75.0,\"${type}_count\":1234,"
              done
              stats=${stats%?}
              stats+="}"
              echo "${os}=${stats}" >> "$GITHUB_OUTPUT"
            done

    process:
      needs: prepare
      runs-on: ubuntu-20.04
      name: Process data for jobs
      env:
        linux: ${{needs.prepare.outputs.linux}}
        mac: ${{needs.prepare.outputs.mac}}
      steps:
        - name: Process data
          shell: bash
          run: |
            for type in "client" "desktop" "plugins";
            do
              coverage=$(echo '${{env['linux']}}' | jq -r .${type}_coverage)
              count=$(echo '${{env['linux']}}' | jq .${type}_count)
              echo "linux, ${type}: ${coverage}%, ${count} tests" >> linux.md
            done
            for type in "client" "desktop" "plugins";
            do
              coverage=$(echo '${{env['mac']}}' | jq -r .${type}_coverage)
              count=$(echo '${{env['mac']}}' | jq .${type}_count)
              echo "mac, ${type}: ${coverage}%, ${count} tests" >> mac.md
            done
            files=$(find . -name '*.md' -type f -exec basename {} \; | tr '\n' ',')
            files=${files%?}
            echo "files: ${files}"

    docs:
      runs-on: ubuntu-20.04
      name: Generate Documents
      steps:
        # - name: Create Initial Content
        #   shell: bash
        #   run: |
        #     mkdir -p docs
        #     echo "Hello World" >> docs/doc.md
      
        # - name: Upload Initial Doc
        #   uses: actions/upload-artifact@v4
        #   with:
        #     name: doc
        #     path: docs
        #     retention-days: 1
        #     overwrite: true
      
        - name: Fetch Existing Doc
          uses: actions/download-artifact@v4
          with:
            name: doc
            path: docs

        - name: Update Content
          shell: bash
          run: echo "Testing ... $(date +'%Y-%m-%d')" >> docs/doc.md

        - name: Upload Doc
          uses: actions/upload-artifact@v4
          with:
            name: doc
            path: docs
            retention-days: 1
            overwrite: true
